import oracledb
import os

# Configuración de la base de datos
# Si el cliente Instant Client no está en tu PATH, descomenta y ajusta esta línea:
# oracledb.init_oracle_client(lib_dir="/path/to/instantclient")

DB_CONFIG = {
    'user': 'your_oracle_user',         # Tu usuario de Oracle
    'password': 'your_oracle_password', # ¡Cambia esto por tu contraseña!
    'dsn': 'localhost:1521/XEPDB1'  # Data Source Name: host:port/service_name o nombre_servicio
                                    # Ej. 'localhost:1521/XE' para Oracle XE
                                    # Ej. 'localhost:1521/ORCLPDB1'
}

def connect_oracle():
    """Establece una conexión a una base de datos Oracle y realiza operaciones básicas."""
    conn = None
    try:
        # 1. Establecer la conexión
        conn = oracledb.connect(**DB_CONFIG)
        # Puedes establecer el autocommit si lo necesitas
        # conn.autocommit = True
        print(f"Conexión exitosa a Oracle: {DB_CONFIG['dsn']}")

        # 2. Crear un cursor
        cursor = conn.cursor()

        # 3. Ejecutar consultas SQL
        # Crear tabla (si no existe)
        # Nota: En Oracle, no hay IF NOT EXISTS tan directo para CREATE TABLE.
        # Se puede manejar con bloques PL/SQL o simplemente capturando la excepción.
        try:
            cursor.execute("""
                CREATE TABLE proyectos (
                    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    nombre VARCHAR2(100) NOT NULL,
                    presupuesto NUMBER(10, 2)
                )
            """)
            print("Tabla 'proyectos' creada.")
        except oracledb.Error as e:
            if e.args[0].code == 942: # ORA-00942: table or view does not exist (cuando se intenta drop)
                print("Tabla 'proyectos' ya existe (o error similar, ignorado para creación).")
            elif e.args[0].code == 955: # ORA-00955: name is already used by an existing object
                print("Tabla 'proyectos' ya existe.")
            else:
                raise e # Re-lanzar otros errores

        # Insertar datos
        cursor.execute("INSERT INTO proyectos (nombre, presupuesto) VALUES (:1, :2)", ("Sitio Web", 50000.75))
        cursor.execute("INSERT INTO proyectos (nombre, presupuesto) VALUES (:1, :2)", ("App Movil", 75000.00))
        print("Datos insertados.")

        # 4. Confirmar cambios
        conn.commit()

        # 5. Obtener resultados
        print("\n--- Proyectos registrados ---")
        cursor.execute("SELECT id, nombre, presupuesto FROM proyectos")
        rows = cursor.fetchall()
        for row in rows:
            print(f"ID: {row[0]}, Nombre: {row[1]}, Presupuesto: {row[2]}")

        # Actualizar datos
        cursor.execute("UPDATE proyectos SET presupuesto = :1 WHERE nombre = :2", (55000.00, "Sitio Web"))
        conn.commit()
        print("\nProyecto 'Sitio Web' actualizado.")

        # Eliminar datos
        cursor.execute("DELETE FROM proyectos WHERE nombre = :1", ("App Movil",))
        conn.commit()
        print("Proyecto 'App Movil' eliminado.")

    except oracledb.Error as e:
        error_obj, = e.args # Error de Oracle
        print(f"Error de Oracle: {error_obj.code} - {error_obj.message}")
        if conn:
            conn.rollback() # Deshacer cambios en caso de error
    finally:
        # 6. Cerrar el cursor y la conexión
        if conn:
            cursor.close()
            conn.close()
            print("\nConexión a Oracle cerrada.")

if __name__ == "__main__":
    connect_oracle()
    
# Antes de ejecutar:

# 1. Asegúrate de tener una base de datos Oracle en ejecución (ej. Oracle XE, una instancia en la nube).
# 2. Instala y configura Oracle Instant Client: Este es un paso crítico. Descárgalo desde el sitio web
# de Oracle y asegúrate de que su directorio esté en tu variable de entorno PATH o especifica
# oracledb.init_oracle_client(lib_dir="/path/to/instantclient") en tu código.
# 3. Crea un esquema/usuario en Oracle si es necesario, y otórgale los permisos adecuados.
# 4. Cambia your_oracle_user, your_oracle_password y el dsn en DB_CONFIG por tus credenciales y los detalles
# de conexión de tu instancia de Oracle.